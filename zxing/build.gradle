apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    resourcePrefix 'zxing_'

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    testOptions {
        // We test with primitives such as Rect, and rely on their default behaviour working.
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation "com.google.zxing:core:${rootProject.zxingCoreVersion}"
    implementation "com.google.android.material:material:${rootProject.supportVersion}"

    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:2.19.0"
}

ext {
    bintrayRepo = 'android-tools'
    bintrayName = 'zxing-incremented'

    publishedGroupId = 'com.velitasali.tools.android'
    libraryName = 'ZXing Incremented'
    artifact = 'zxing'

    libraryDescription = 'A fork of https://bintray.com/journeyapps/maven/zxing-android-embedded which includes latest tools'

    siteUrl = 'https://github.com/velitasali/ZXingIncremented'
    gitUrl = 'https://github.com/velitasali/ZXingIncremented.git'

    libraryVersion = rootProject.versionName
    publishVersion = rootProject.versionName

    developerId = 'velitasali'
    developerName = 'Veli TasalÄ±'
    developerEmail = 'genonbeta@gmail.com'

    licenseName = 'General Public Licence, Version 3.0'
    licenseUrl = 'https://www.gnu.org/licenses/gpl.html'
    allLicenses = ["GPL-3.0"]
}

group = publishedGroupId
version = rootProject.versionName

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        userOrg = properties.getProperty("bintray.organization")
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            name = rootProject.versionName
            released = new Date()
            vcsTag = rootProject.versionName
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}